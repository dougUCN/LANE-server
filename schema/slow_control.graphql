type Device {
  """
  Describes whether a device is online and
  what configuration settings are available on said device
  """
  name: String
  deviceOptions: [deviceOption!]
  isOnline: Boolean
}

input DeviceInput {
  """
  Describes whether a device is online and
  what configuration settings are available on said device

  `isOnline` defaults to false if unspecified
  """
  name: String!
  deviceOptions: [deviceOption!]
  isOnline: Boolean
}

type DevicePayload {
  """
  Return value of a mutation affecting devices.
  """
  message: String!
  success: Boolean!
}

type getRunConfigsPayload {
  """
  Returns a list of RunConfigs.

  Includes flag describing whether it is possible to
  create a new run or if the storage cap has been reached
  """
  runConfigs: [RunConfig]
  canCreateNewRun: Boolean!
}

type RunConfig {
  """
  - `ID`: Unique identifier of the run
  - `name`: Name for a run
  - `created`: Creation datetime [UTC]
  - `lastLoaded`: Last datetime [UTC] the runfile was modified or queued
  - `steps`: Describes what occurs during the run
  - `priority`: larger value = greater priority for slow control worker to run the job.
              (Default 0).
  - `status`: Describes whether slow control worker has run the job
  """
  id: ID!
  name: String!
  created: Datetime
  lastLoaded: Datetime
  steps: [RunConfigStep!]
  priority: Int
  status: RunConfigStatusEnum
}

input RunConfigInput {
  """
  - `name`: Name for a run
  - `priority`: larger value = greater priority for slow control worker to run the job.
            (Default 0).
  - `steps`: Describes what occurs during the run
  - `status`: Describes whether slow control worker has run the job
  """
  name: String!
  steps: [RunConfigStepInput!]
  priority: Int
  status: RunConfigStatusEnum
}

input RunConfigUpdateInput {
  """
  Updates the properties of a run with unique identifier `id`
  - `name`: Name for a run
  - `priority`: larger value = greater priority for slow control worker to run the job.
              (Default 0).
  - `status`: Describes whether slow control worker has run the job
  """
  id: ID!
  name: String
  steps: [RunConfigStepInput!]
  priority: Int
  status: RunConfigStatusEnum
}

type RunConfigStep {
  """
  Describes when a step occurs, with what device, and what occurs to
  said device
  """
  timeFrameOptionType: timeFrameOptionEnum
  deviceName: String!
  deviceOption: DeviceOption!
  time: Float!
  description: String
}

input RunConfigStepInput {
  """
  Describes when a step occurs, with what device, and what occurs to
  said device
  """
  timeFrameOptionType: timeFrameOptionEnum
  deviceName: String!
  deviceOption: DeviceOptionInput!
  time: Float!
  description: String
}

type DeviceOption {
  """
  Describes the properties of an option for a device
  """
  deviceOptionType: DeviceOptionEnum!
  options: [String]
  userInput: Float
}

input DeviceOptionInput {
  """
  Describes the properties of an option for a device
  """
  deviceOptionType: DeviceOptionEnum!
  options: [String]
  userInput: Float
}

type RunConfigPayload {
  """
  Return value of a mutation affecting RunConfigs
  """
  message: String!
  success: Boolean!
}

type SlowControlPayload {
  """
  Return value of a mutation involving communications
  with the slow control worker
  """
  message: String!
  success: Boolean!
}

enum DeviceOptionEnum {
  """
  - `SELECT_MANY`: Of options presented, user may select mulitple
  - `SELECT_ONE`: Of options presented, expects only one
  - `USER_INPUT`: Expects a float input from user
  """
  SELECT_ONE
  SELECT_MANY
  USER_INPUT
}

enum timeFrameOptionEnum {
  """
  Different phases of the runs
  - `BEFORE`: The step is to prep the run
  - `DURING`: The step occurs during the run
  - `AFTER`: A cleanup step after a run
  """
  BEFORE
  DURING
  AFTER
}

enum RunConfigStatusEnum {
  """
  Describes the status of a run config file
  """
  NONE
  QUEUED
  RUNNING
  COMPLETED
  ERROR
}
