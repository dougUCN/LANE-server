"""
A Histogram is a list of x,y data points to plot
along with additional metadata

Stored in the static db
"""
type Histogram {
  "Unique integer identifier"
  id: ID!
  "Run Name"
  name: String
  "List of x y coordinates"
  data: [Point!]
  "Range of the x axis to plot"
  xrange: Range!
  "Range of the y axis to plot"
  yrange: Range!
  "Number of data points"
  len: Int
  "Detector type"
  type: String
  "Datetime when the histogram was made in the database"
  created: Datetime
}

"""
A LiveHistogram is a list of updating x,y data points to plot
with additional metadata that is sent over a subscription

Stored in the live db
"""
type LiveHistogram {
  "Unique integer identifier"
  id: ID!
  "Run name"
  name: String
  "List of x y coordinates"
  data: [Point!]
  "Range of the x axis to plot"
  xrange: Range!
  "Range of the y axis to plot"
  yrange: Range!
  "Number of data points"
  len: Int
  "The last added `Point`"
  current: Point
  "Detector type"
  type: String
  "Datetime when histogram was made in the database"
  created: Datetime
}

"Input type for creation of a Histogram"
input HistogramInput {
  "Unique integer identifier of a histogram"
  id: ID!
  "Run name. Can be duplicate"
  name: String!
  "List of x y coordinates"
  data: [PointInput!]
  "Range of the x axis to plot"
  xrange: RangeInput!
  "Range of the y axis to plot"
  yrange: RangeInput!
  "Detector type"
  type: String!
  "Whether histogram gets put in the live or static database (default: static)"
  isLive: Boolean
}

"Input type for updating an existing Histogram"
input HistogramUpdateInput {
  "Unique integer identifier of the Histogram to edit"
  id: ID!
  "List of x y coordinates"
  data: [PointInput!]
  "Range of the x axis to plot"
  xrange: RangeInput
  "Range of the y axis to plot"
  yrange: RangeInput
  "Detector type"
  type: String
  "Whether histogram to edit exists in live database or the static one (default: static)"
  isLive: Boolean
}

"Coordinate in a format compatible with an SVG plotter"
type Point {
  x: Float!
  y: Float!
}

"Coordinate in a format compatible with an SVG plotter"
input PointInput {
  x: Float!
  y: Float!
}

"A minimum and maximum for a range of values"
type Range {
  min: Float!
  max: Float!
}

"A minimum and maximum for a range of values"
input RangeInput {
  min: Float!
  max: Float!
}

"""
Return value of a mutation affecting histograms.
"""
type HistogramPayload {
  message: String!
  success: Boolean!
  """
  Returns the histogram that was the mutation target
  (for cache updating purposes)
  """
  modifiedHistogram: Histogram!
}

"""
Returns a list of live histograms (if any) and
the name of the last completed run
"""
type HistogramSubscriptionPayload {
  histograms: [LiveHistogram]
  "Name of the last completed run"
  lastRun: String
}

"Datetime in UTC"
scalar Datetime
